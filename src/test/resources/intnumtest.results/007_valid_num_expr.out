# x86-64 Assembly Code - AT&T format
# program numtest
# compiled on Mon Apr 04 09:19:13 CEST 2022
.data
.align 8
	tinsel_msg_: .string "TINSEL version 2.0 for x86-84 (Linux) Apr 2022 (c) M.Pappas\n"
	newline_: .string "\n"
	i1:	.quad 0

.text
.align 8
.global _start

# main program
_start:
	pushq	%rbx		# save "callee"-save registers
	pushq	%rbp		# new stack frame
	movq	%rsp, %rbp
# print hello message
	lea	tinsel_msg_(%rip), %rdi
	call	write_s_

	movq	$5, %rax
	testq	%rax, %rax
	pushq	%rax
	movq	$-10, %rax
	testq	%rax, %rax
	popq	%rbx
	addq	%rbx, %rax
	pushq	%rax
	movq	$128, %rax
	testq	%rax, %rax
	pushq	%rax
	movq	$4, %rax
	testq	%rax, %rax
	popq	%rbx
	addq	%rbx, %rax
	pushq	%rax
	movq	$2, %rax
	testq	%rax, %rax
	popq	%rbx
	imulq	%rbx, %rax
	pushq	%rax
	movq	$325, %rax
	testq	%rax, %rax
	movq	%rax, %rbx
	popq	%rax
	subq	%rbx, %rax
	pushq	%rax
	movq	$6, %rax
	testq	%rax, %rax
	movq	%rax, %rbx
	popq	%rax
	cqto		# sign extend to rdx
	idivq	%rbx, %rax
	popq	%rbx
	addq	%rbx, %rax
	movq	%rax, i1(%rip)
	movq	i1(%rip), %rax
	testq	%rax, %rax
	movq	%rax, %rdi		# value to be printed in rdi
	call	write_i_
	lea	newline_(%rip), %rdi
	call	write_s_

# end of main
main_exit_:
	movq	%rbp, %rsp		# restore stack frame
	popq	%rbp
	popq	%rbx		# restore "callee"-save registers
	movq	$60, %rax		# exit system call
	xorq	%rdi, %rdi		# exit code 0
	syscall

# end program

.data
	.align 8
